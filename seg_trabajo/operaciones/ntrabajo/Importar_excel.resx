<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>